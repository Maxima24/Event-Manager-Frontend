"use client";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { EventsProvider } from "./contexts/eventContext";
import { ToastProvider } from "./contexts/toastContext";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { ReactNode, useState } from "react";
import { AuthProvider } from "./contexts/userContext";
import { TicketProvider } from "./contexts/ticketContext";
import { OrderProvider } from "./contexts/orderContext";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// }

// ✅ Mark as client component

export default function RootLayout({ children }: { children: ReactNode }) {
  // ✅ Use state to persist queryClient
  const [queryClient] = useState(() => new QueryClient());

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* QueryClientProvider must wrap EventsProvider */}
        <QueryClientProvider client={queryClient}>
          <ToastProvider>
          <AuthProvider>
            <EventsProvider>
              <TicketProvider>
                <OrderProvider>
                {children}
                </OrderProvider>
                </TicketProvider>
            </EventsProvider>
          </AuthProvider>
          </ToastProvider>
         
        </QueryClientProvider>
      </body>
    </html>
  );
}
